var tipuesearch = {"pages": [{'title': 'Week', 'text': 'week2-5 \n week6-9 \n week10-14 \n week15-18 \n', 'tags': '', 'url': 'Week.html'}, {'title': 'week2-5', 'text': 'week2 \n 建立個人的 cad2019倉儲 \n 影片網址: https://youtu.be/rkhGfvRbUt4 \n \n \n week3 \n Solvespace 編譯 \n 1. 先將 E:\\portablegit\\bin\\sh.exe 改名為 sh_rename_for_solvespace.exe \n 2.git clone --recurse-submodules https://github.com/solvespace/solvespace.git solvespace \n 3.編輯cmakelist內之713及714行\xa0 \xa0(加入#字號) \n 4.cd solvespace>cd extlib>cd libpng>mkdir build>cd build \n 5.執行這個指令cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release mingw32-make \n 6.接下來需要進行 libpng.dll.a 的編譯, 並改名為 libpng_static.a \n 7.將還需要增加的檔案複製到tmp/solvespace/build/bin \n 8.在一次執行cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release mingw32-make，將最後需要的東西補上。 \n 影片網址: https://youtu.be/HP_FiP3hAts \n \n wee4 \n 自主練習 \n wee5 \n Solvespace 的簡單操作 \n 練習老師給的編號3的工件 \n 影片網址: https://youtu.be/ChDmSAdeyMo \n \n \n \n', 'tags': '', 'url': 'week2-5.html'}, {'title': 'week6-9', 'text': 'week6 \n Solvespace繪製雙輪自走車 \n 1.繪製車身 \n 2.繪製輪胎 \n 3.車體組裝 \n 影片網址: https://youtu.be/GQ4JLwFPZGI \n \n 網際V-rep模型控制 \n 影片網址: https://youtu.be/Q3swpNTDmxk \n \n week7 \n Solvespace加入學號 \n 影片網址: https://www.youtube.com/watch?v=pQPMRe8Jl8U \n \n Solvespace繪圖驗證 \n 第一張圖 \n 影片網址: https://www.youtube.com/watch?v=2GCNcJ7J2ko \n \n week8 \n 導入Webots \n 影片網址: https://youtu.be/vuIHMrQgIiM \n \n 網誌開啟 \n 影片網址: https://youtu.be/9EOU3e9B8_4 \n', 'tags': '', 'url': 'week6-9.html'}, {'title': 'week10-14', 'text': 'week10 \n NX 與 Solidworks的差異 \n 1.文件格式:NX的文件格式為.prt；SolidWorks的文件格式為.sldprt。 \n 2.建立草圖方式:NX分為草圖和在任務環境中繪製草圖；SolidWorks分為草圖繪製和3D草圖。 \n 3.草圖平面:NX在創建草圖時會提示你是選擇現有平面還是創建平面；而SolidWorks是直接選擇平面，如果想選擇創建的平面就需要提前創建。 \n 4.參數化:NX分為尺寸約束和幾何約束。繪製草圖時也應該儘量做到完全約束。如果欠約束，NX會告訴你欠幾個約束。如果過約束，NX也會提示。SolidWorks的說法是定義，也需要添加幾何關係，其實道理是一樣的，如果欠定義的話，線的顯示顏色不一樣，但不顯示欠幾個定義。不欠定義的話就是完全定義。 \n 5.快速約束的方式。如下圖，在NX中連續單擊線1，線2，會出現一個臨時的約束工具條，選擇需要的約束即可。 \n \n sodiworks的繪圖練習 \n 影片網址: https://www.youtube.com/watch?v=0mVgqw164PI \n \n \n \n week12 \n NX第8章翻譯結果練習 \n 影片網址: https://youtu.be/9tC1mZya2_E \n \n \n week13 \n 13周之前的內容簡報 \n 影片網址: https://www.youtube.com/watch?v=HHE8XSvZRXU \n \n webot tutorial - 1 \n 影片網址: https://youtu.be/gQuszM7lGB8 \n \n', 'tags': '', 'url': 'week10-14.html'}, {'title': 'week15-18', 'text': 'week15 \n 學習個人成果回報 \n 以一個三分鐘的影片來記錄之前的進度 \n 影片網址: https://youtu.be/eT-i_oYouj4 \n \n week16 \n week16查驗 \n 將越野車零組件導入vrep \n 操作影片: https://www.youtube.com/watch?v=blJILUWKwf8 \n \n 將越野車零組件導入webot \n 影片網址: https://www.youtube.com/watch?v=uPCe-5qKRA0 \n \n', 'tags': '', 'url': 'week15-18.html'}, {'title': 'note', 'text': '', 'tags': '', 'url': 'note.html'}, {'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n \n \xa0 \n \n \n \n \n \n \n', 'tags': '', 'url': 'Develop.html'}]};